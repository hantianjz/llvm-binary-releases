name: Create LLVM Binary Releases

on:
  workflow_dispatch:
    inputs:
      binary_url:
        description: 'URL to the LLVM binary tar file'
        required: true
        type: string

permissions:
  contents: write  # Required for creating releases

jobs:
  extract-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Extract binaries
        run: |
          python scripts/process_binary.py \
            -o ./output \
            "${{ github.event.inputs.binary_url }}"

      - name: Read metadata
        id: metadata
        run: |
          content=$(cat ./output/metadata.json)
          echo "metadata=$content" >> $GITHUB_OUTPUT
          echo "release_tag=$(jq -r .release_tag ./output/metadata.json)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          artifacts: "output/*"
          artifactErrorsFailBuild: true
          makeLatest: false
          generateReleaseNotes: false
          removeArtifacts: true
          tag: "${{ steps.metadata.outputs.release_tag }}"
          body: |
            LLVM binaries extracted from ${{ fromJson(steps.metadata.outputs.metadata).source_url }}
            
            Version: ${{ fromJson(steps.metadata.outputs.metadata).version }}
            Platform: ${{ fromJson(steps.metadata.outputs.metadata).platform }}
            OS: ${{ fromJson(steps.metadata.outputs.metadata).os }}
            
            Extracted binaries:
            ```
            ${{ join(fromJson(steps.metadata.outputs.metadata).processed_binaries, '\n') }}
            ```
            
            Source URL: ${{ fromJson(steps.metadata.outputs.metadata).source_url }}
            Extraction Date: ${{ fromJson(steps.metadata.outputs.metadata).extraction_date }}
            Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}