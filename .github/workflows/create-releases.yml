name: Create LLVM Binary Releases

on:
  workflow_dispatch:
    inputs:
      binary_url:
        description: 'URL to the LLVM binary tar file'
        required: true
        type: string

permissions:
  contents: write  # Required for creating releases

jobs:
  extract-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Extract binaries
        run: |
          python scripts/process_binary.py \
            -o ./output \
            "${{ github.event.inputs.binary_url }}"

      # Save metadata as step outputs
      - name: Process metadata
        id: meta
        run: |
          # Get release tag
          echo "tag=$(jq -r .release_tag ./output/metadata.json)" >> $GITHUB_OUTPUT
          # Get version info
          echo "version=$(jq -r .version ./output/metadata.json)" >> $GITHUB_OUTPUT
          echo "platform=$(jq -r .platform ./output/metadata.json)" >> $GITHUB_OUTPUT
          echo "os=$(jq -r .os ./output/metadata.json)" >> $GITHUB_OUTPUT
          echo "date=$(jq -r .extraction_date ./output/metadata.json)" >> $GITHUB_OUTPUT
          # Get binaries list
          echo "binaries=$(jq -r '.processed_binaries | join("\n")' ./output/metadata.json)" >> $GITHUB_OUTPUT
          # Remove metadata from output directory
          rm ./output/metadata.json

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          artifacts: "output/*"
          artifactErrorsFailBuild: true
          makeLatest: false
          generateReleaseNotes: false
          removeArtifacts: true
          tag: "${{ steps.meta.outputs.tag }}"
          body: |
            LLVM binaries extracted from ${{ github.event.inputs.binary_url }}
            
            Version: ${{ steps.meta.outputs.version }}
            Platform: ${{ steps.meta.outputs.platform }}
            OS: ${{ steps.meta.outputs.os }}
            
            Extracted binaries:
            ```
            ${{ steps.meta.outputs.binaries }}
            ```
            
            Source URL: ${{ github.event.inputs.binary_url }}
            Extraction Date: ${{ steps.meta.outputs.date }}
            Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}